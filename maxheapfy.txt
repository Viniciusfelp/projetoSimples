
    /*  public int[] max_heapfy(int a[], int i){
        int maior;
        int aux = 0;
        int count = i;
        int l = 2*count+1;
        int r = (2*count)+2;
        if(l<= a.length-1 && a[l].vPrioridade > a[count].vPrioridade) {
            maior = l;
        }else {
            maior = count;
        }if(r<= a.length-1 && a[r].vPrioridade> a[maior].vPrioridade) {
            maior = r;
        }if(maior!=count ) {
            aux = a[maior].vPrioridade;
            a[maior] = a[count];
            a[count] = aux;
            max_heapfy(a, maior);
        }
        return a;
    }
    public int[] build_max_heap(int a[]){
        int b[] = new int[a.length];

        for(int i = a.length/2; i>=0 ; i--){
            b = max_heapfy(a, i);
        }
        return b;
    }*/